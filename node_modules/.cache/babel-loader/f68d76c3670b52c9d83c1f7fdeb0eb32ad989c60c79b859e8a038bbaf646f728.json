{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/inotebook/src/context/PostState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport postContext from './postContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  const host = \"http://localhost:4000\";\n  const allpost = [];\n  const user = [];\n  const [posts, SetPost] = useState(allpost);\n\n  //get all notes\n  const getpost = async () => {\n    //API CALL\n    const resposne = await fetch(`${host}/posts/`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await resposne.json();\n    SetPost(json);\n  };\n\n  // add a post\n  const addpost = async newpost => {\n    const Title = newpost.Title;\n    const Subheading = newpost.Subheading;\n    const Description = newpost.Description;\n\n    //API CALL\n    const resposne = await fetch(`${host}/posts/newpost`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        Title,\n        Subheading,\n        Description\n      })\n    });\n    const json = resposne.json();\n    getpost();\n  };\n\n  // get user details \n  const userdetails = async id => {\n    // API CALL\n    const response = await fetch(`${host}/posts/getuser/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(postContext.Provider, {\n    value: {\n      posts,\n      addpost,\n      getpost\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteState, \"1kx+wbsKpjBLoab4Q3fG02+6pW4=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","postContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","allpost","user","posts","SetPost","getpost","resposne","fetch","method","headers","json","addpost","newpost","Title","Subheading","Description","localStorage","getItem","body","JSON","stringify","userdetails","id","response","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/inotebook/src/context/PostState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport postContext from './postContext';\n\n\nexport default function NoteState(props) {\n    const host = \"http://localhost:4000\"\n    const allpost =[]\n    const user=[]\n\n    const [posts, SetPost] = useState(allpost)\n\n    //get all notes\n    const getpost=async()=>{\n        //API CALL\n        const resposne = await fetch(`${host}/posts/`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n           \n        });\n        const json = await resposne.json()\n        SetPost(json);\n        \n    }\n\n    // add a post\n    const addpost = async (newpost) => {\n        const Title = newpost.Title;\n        const Subheading = newpost.Subheading;\n        const Description = newpost.Description;\n\n        //API CALL\n        const resposne = await fetch(`${host}/posts/newpost`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({ Title,Subheading, Description })\n\n        });\n        const json = resposne.json()\n        getpost()\n    }\n\n    // get user details \n    const userdetails = async(id)=>{\n        // API CALL\n        const response = await fetch(`${host}/posts/getuser/${id}`,{\n            method :\"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n        });\n\n    }\n\n\n\n    return (\n        <postContext.Provider value={{ posts,addpost,getpost}}>\n            {props.children}\n        </postContext.Provider>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,OAAO,GAAE,EAAE;EACjB,MAAMC,IAAI,GAAC,EAAE;EAEb,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACQ,OAAO,CAAC;;EAE1C;EACA,MAAMI,OAAO,GAAC,MAAAA,CAAA,KAAS;IACnB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,SAAS,EAAE;MAC3CQ,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IAEJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCN,OAAO,CAACM,IAAI,CAAC;EAEjB,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,MAAOC,OAAO,IAAK;IAC/B,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B,MAAMC,UAAU,GAAGF,OAAO,CAACE,UAAU;IACrC,MAAMC,WAAW,GAAGH,OAAO,CAACG,WAAW;;IAEvC;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,IAAI,gBAAgB,EAAE;MAClDQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEO,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAACC,UAAU;QAAEC;MAAY,CAAC;IAE1D,CAAC,CAAC;IACF,MAAML,IAAI,GAAGJ,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC5BL,OAAO,CAAC,CAAC;EACb,CAAC;;EAED;EACA,MAAMgB,WAAW,GAAG,MAAMC,EAAE,IAAG;IAC3B;IACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAC,GAAGP,IAAI,kBAAkBsB,EAAE,EAAE,EAAC;MACvDd,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IAEJ,CAAC,CAAC;EAEN,CAAC;EAID,oBACIb,OAAA,CAACF,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAACQ,OAAO;MAACN;IAAO,CAAE;IAAAqB,QAAA,EACjD5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B;AAAC/B,EAAA,CA9DuBF,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}