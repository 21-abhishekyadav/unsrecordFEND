{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekyadav/Desktop/WEBDEV/MERN/FRONTEND/inotebook/src/context/NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  const host = \"http://localhost:4000\";\n  const [notes, SetNote] = useState(allnotes);\n\n  //get all notes\n  const getnotes = async () => {\n    //API CALL\n    const resposne = await fetch(`${host}/notes/fetchnotes`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n      }\n    });\n    const json = await resposne.json();\n    console.log(json);\n    SetNote();\n  };\n\n  // add a note \n  const addnote = async newnote => {\n    const Title = newnote.Title;\n    const Description = newnote.Description;\n\n    //API CALL\n    const resposne = await fetch(`${host}/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = resposne.json();\n\n    // const note ={\n    //     \"_id\": \"66979125a8bc1a0fe{}d28ad\"+(Math.floor(Math.random() * 100)),\n    //     \"User\": \"66978f420b72a8560dcc15c3\",\n    //     \"Title\": `${newnote.Title}`,\n    //     \"Description\": `${newnote.Description}`,\n    //     \"__v\": 0\n\n    // }\n    // SetNote([...notes,note]);\n  };\n\n  //delete a note\n  const deletenote = id => {\n    //console.log(\"deleting the node with id \"+id);\n    const note = notes.filter(notes => {\n      return notes._id !== id;\n    });\n    SetNote(note);\n  };\n\n  // edit a note\n  const editnote = async (id, Title, Description) => {\n    //API CALL\n\n    const resposne = await fetch(`${host}/notes/updatenotes/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = resposne.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.Title = Title;\n        element.Description = Description;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      deletenote,\n      editnote,\n      getnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteState, \"zCyKw9cl5r4CE+sP0NRzEx+6vkI=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notes","SetNote","allnotes","getnotes","resposne","fetch","method","headers","json","console","log","addnote","newnote","Title","Description","body","JSON","stringify","deletenote","id","note","filter","_id","editnote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/FRONTEND/inotebook/src/context/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport noteContext from './noteContext';\n\nexport default function NoteState(props) {\n    const host = \"http://localhost:4000\"\n\n    const [notes, SetNote] = useState(allnotes)\n\n    //get all notes\n    const getnotes=async()=>{\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/fetchnotes`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n            },\n            \n\n        });\n        const json = await resposne.json()\n        console.log(json);\n        SetNote()\n        \n\n    }\n\n\n\n\n    // add a note \n    const addnote = async (newnote) => {\n        const Title = newnote.Title;\n        const Description = newnote.Description;\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/addnote`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n            },\n            body: JSON.stringify({ Title, Description })\n\n        });\n        const json = resposne.json()\n\n\n\n        // const note ={\n        //     \"_id\": \"66979125a8bc1a0fe{}d28ad\"+(Math.floor(Math.random() * 100)),\n        //     \"User\": \"66978f420b72a8560dcc15c3\",\n        //     \"Title\": `${newnote.Title}`,\n        //     \"Description\": `${newnote.Description}`,\n        //     \"__v\": 0\n\n        // }\n        // SetNote([...notes,note]);\n    }\n\n    //delete a note\n    const deletenote = (id) => {\n        //console.log(\"deleting the node with id \"+id);\n        const note = notes.filter((notes) => { return notes._id !== id })\n        SetNote(note);\n    }\n\n    // edit a note\n    const editnote = async (id, Title, Description) => {\n\n        //API CALL\n\n        const resposne = await fetch(`${host}/notes/updatenotes/${id}`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n            },\n            body: JSON.stringify({ Title, Description })\n\n        });\n        const json = resposne.json()\n\n        for (let index = 0; index < notes.length; index++) {\n            const element = notes[index];\n            if (element._id === id) {\n                element.Title = Title;\n                element.Description = Description;\n            }\n\n        }\n    }\n\n    return (\n        <noteContext.Provider value={{ notes, addnote, deletenote, editnote ,getnotes}}>\n            {props.children}\n        </noteContext.Provider>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}