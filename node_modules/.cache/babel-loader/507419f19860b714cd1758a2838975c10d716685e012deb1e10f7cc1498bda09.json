{"ast":null,"code":"import React,{useState}from'react';import noteContext from'./noteContext';import{jsx as _jsx}from\"react/jsx-runtime\";export default function NoteState(props){const host=\"https://unsrecordbend.onrender.com\";const allnotes=[];const[notes,SetNote]=useState(allnotes);//get all notes\nconst getnotes=async()=>{//API CALL\nconst resposne=await fetch(\"\".concat(host,\"/notes/fetchnotes\"),{method:\"GET\",headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});const json=await resposne.json();SetNote(json);};// add a note \nconst addnote=async newnote=>{const Title=newnote.Title;const Description=newnote.Description;const Posted=newnote.Posted;//API CALL\nconst resposne=await fetch(\"\".concat(host,\"/notes/addnote\"),{method:\"POST\",headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({Title,Description,Posted})});const json=resposne.json();getnotes();};//delete a note\nconst deletenote=async id=>{//console.log(\"deleting the node with id \"+id);\nconst note=notes.filter(notes=>{return notes._id!==id;});SetNote(note);//API CALL\nconst resposne=await fetch(\"\".concat(host,\"/notes/deletenote/\").concat(id),{method:\"DELETE\",headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});const json=resposne.json();};const[iid,Setid]=useState(\"\");const waitt=idd=>{Setid(idd);};// edit a note\nconst editnote=async newnote=>{const Title=newnote.Title;const Description=newnote.Description;//API CALL\nconst resposne=await fetch(\"\".concat(host,\"/notes/updatenotes/\").concat(iid),{method:\"PUT\",headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({Title,Description})});const json=await resposne.json();getnotes();};return/*#__PURE__*/_jsx(noteContext.Provider,{value:{notes,addnote,deletenote,editnote,getnotes,waitt},children:props.children});}","map":{"version":3,"names":["React","useState","noteContext","jsx","_jsx","NoteState","props","host","allnotes","notes","SetNote","getnotes","resposne","fetch","concat","method","headers","localStorage","getItem","json","addnote","newnote","Title","Description","Posted","body","JSON","stringify","deletenote","id","note","filter","_id","iid","Setid","waitt","idd","editnote","Provider","value","children"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/src/context/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport noteContext from './noteContext';\n\nexport default function NoteState(props) {\n    const host = \"https://unsrecordbend.onrender.com\"\n    const allnotes =[]\n\n    const [notes, SetNote] = useState(allnotes)\n\n    //get all notes\n    const getnotes=async()=>{\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/fetchnotes`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n\n        });\n        const json = await resposne.json()\n        SetNote(json);\n        \n\n    }\n\n    // add a note \n    const addnote = async (newnote) => {\n        const Title = newnote.Title;\n        const Description = newnote.Description;\n        const Posted = newnote.Posted;\n\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/addnote`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({ Title, Description,Posted })\n\n        });\n        const json = resposne.json()\n        getnotes()\n    }\n\n    //delete a note\n    const deletenote = async(id) => {\n        //console.log(\"deleting the node with id \"+id);\n        const note = notes.filter((notes) => { return notes._id !== id })\n        SetNote(note);\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/deletenote/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n\n\n        });\n        const json = resposne.json()\n    }\n\n    const [iid, Setid] = useState(\"\")\n        const waitt=(idd)=>{\n            Setid(idd);\n        }\n    \n\n    // edit a note\n    const editnote = async (newnote) => {\n        \n        \n\n        const Title = newnote.Title;\n        const Description = newnote.Description;\n\n\n        //API CALL\n\n        const resposne = await fetch(`${host}/notes/updatenotes/${iid}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({ Title, Description,  })\n\n        });\n        const json = await resposne.json()\n    \n\n        getnotes();\n    }\n\n    return (\n        <noteContext.Provider value={{ notes, addnote, deletenote, editnote ,getnotes,waitt}}>\n            {props.children}\n        </noteContext.Provider>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}