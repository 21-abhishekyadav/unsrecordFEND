{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/inotebook/src/context/NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  const host = \"http://localhost:4000\";\n  const allnotes = [];\n  const [notes, SetNote] = useState(allnotes);\n\n  //get all notes\n  const getnotes = async () => {\n    //API CALL\n    const resposne = await fetch(`${host}/notes/fetchnotes`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = await resposne.json();\n    SetNote(json);\n  };\n\n  // add a note \n  const addnote = async newnote => {\n    const Title = newnote.Title;\n    const Description = newnote.Description;\n\n    //API CALL\n    const resposne = await fetch(`${host}/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = resposne.json();\n    getnotes();\n  };\n\n  //delete a note\n  const deletenote = async id => {\n    //console.log(\"deleting the node with id \"+id);\n    const note = notes.filter(notes => {\n      return notes._id !== id;\n    });\n    SetNote(note);\n\n    //API CALL\n    const resposne = await fetch(`${host}/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = resposne.json();\n  };\n  const [iid, Setid] = useState(\"\");\n  const waitt = idd => {\n    Setid(idd);\n  };\n\n  // edit a note\n  const editnote = async newnote => {\n    const Title = newnote.Title;\n    const Description = newnote.Description;\n    const Posted = newnote.Posted;\n\n    //API CALL\n\n    const resposne = await fetch(`${host}/notes/updatenotes/${iid}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = await resposne.json();\n    getnotes();\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      deletenote,\n      editnote,\n      getnotes,\n      waitt\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteState, \"Nm3peg+8hipiIu5JHWB1kuEO5lE=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","allnotes","notes","SetNote","getnotes","resposne","fetch","method","headers","localStorage","getItem","json","addnote","newnote","Title","Description","body","JSON","stringify","deletenote","id","note","filter","_id","iid","Setid","waitt","idd","editnote","Posted","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/inotebook/src/context/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport noteContext from './noteContext';\n\nexport default function NoteState(props) {\n    const host = \"http://localhost:4000\"\n    const allnotes =[]\n\n    const [notes, SetNote] = useState(allnotes)\n\n    //get all notes\n    const getnotes=async()=>{\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/fetchnotes`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n\n        });\n        const json = await resposne.json()\n        SetNote(json);\n        \n\n    }\n\n    // add a note \n    const addnote = async (newnote) => {\n        const Title = newnote.Title;\n        const Description = newnote.Description;\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/addnote`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({ Title, Description })\n\n        });\n        const json = resposne.json()\n        getnotes()\n    }\n\n    //delete a note\n    const deletenote = async(id) => {\n        //console.log(\"deleting the node with id \"+id);\n        const note = notes.filter((notes) => { return notes._id !== id })\n        SetNote(note);\n\n        //API CALL\n        const resposne = await fetch(`${host}/notes/deletenote/${id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n\n\n        });\n        const json = resposne.json()\n    }\n\n    const [iid, Setid] = useState(\"\")\n        const waitt=(idd)=>{\n            Setid(idd);\n        }\n    \n\n    // edit a note\n    const editnote = async (newnote) => {\n        \n        \n\n        const Title = newnote.Title;\n        const Description = newnote.Description;\n        const Posted = newnote.Posted;\n\n\n        //API CALL\n\n        const resposne = await fetch(`${host}/notes/updatenotes/${iid}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token')\n            },\n            body: JSON.stringify({ Title, Description,  })\n\n        });\n        const json = await resposne.json()\n    \n\n        getnotes();\n    }\n\n    return (\n        <noteContext.Provider value={{ notes, addnote, deletenote, editnote ,getnotes,waitt}}>\n            {props.children}\n        </noteContext.Provider>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}