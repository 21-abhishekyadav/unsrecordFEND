{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekyadav/Desktop/WEBDEV/MERN/FRONTEND/inotebook/src/context/NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  const host = \"http://localhost:4000\";\n  const allnotes = [{\n    \"_id\": \"66979125a8bc1a0fe39d28ad\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the first note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"66979131a8bc1a0fde39d28b1\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the second note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"66979136a8bcf1a0fe39d28b3\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the dsvnfopvfindi note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"66979125a8bc1a0kfe39d28ad\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the first note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd lorem32\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"66979125a8bc1ka0fe39d28ad\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the first note\",\n    \"Description\": \"fdginropigfgiorehguoehsgveifdpohgerpifovhpneuprgso;vhireosupgherovgheoivgboeirybvnjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"66979125a8bc1ak0fe39d28ad\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the first note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }, {\n    \"_id\": \"6697k9125a8bc1a0fe39d28ad\",\n    \"User\": \"66978f420b72a8560dcc15c3\",\n    \"Title\": \"this is the first note\",\n    \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n    \"__v\": 0\n  }];\n  const [notes, SetNote] = useState(allnotes);\n\n  // add a note \n  const addnote = async newnote => {\n    const Title = newnote.Title;\n    const Description = newnote.Description;\n\n    //API CALL\n    const resposne = await fetch(`${host}/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = resposne.json();\n\n    // const note ={\n    //     \"_id\": \"66979125a8bc1a0fe{}d28ad\"+(Math.floor(Math.random() * 100)),\n    //     \"User\": \"66978f420b72a8560dcc15c3\",\n    //     \"Title\": `${newnote.Title}`,\n    //     \"Description\": `${newnote.Description}`,\n    //     \"__v\": 0\n\n    // }\n    // SetNote([...notes,note]);\n  };\n\n  //delete a note\n  const deletenote = id => {\n    //console.log(\"deleting the node with id \"+id);\n    const note = notes.filter(notes => {\n      return notes._id !== id;\n    });\n    SetNote(note);\n  };\n\n  // edit a note\n  const editnote = async (id, Title, Description) => {\n    //API CALL\n\n    const resposne = await fetch(`${host}/notes/updatenotes/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n      },\n      body: JSON.stringify({\n        Title,\n        Description\n      })\n    });\n    const json = resposne.json();\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.Title = Title;\n        element.Description = Description;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addnote,\n      deletenote,\n      editnote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteState, \"zMTj5QYz7XCxjpUxq8yVv1GqPv4=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","allnotes","notes","SetNote","addnote","newnote","Title","Description","resposne","fetch","method","headers","body","JSON","stringify","json","deletenote","id","note","filter","_id","editnote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/FRONTEND/inotebook/src/context/NoteState.js"],"sourcesContent":["import React, {useState} from 'react'\nimport noteContext from './noteContext';\n\nexport default function NoteState(props) {\n    const host =\"http://localhost:4000\"\n    const allnotes=\n       [ {\n            \"_id\": \"66979125a8bc1a0fe39d28ad\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the first note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"66979131a8bc1a0fde39d28b1\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the second note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"66979136a8bcf1a0fe39d28b3\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the dsvnfopvfindi note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"66979125a8bc1a0kfe39d28ad\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the first note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd lorem32\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"66979125a8bc1ka0fe39d28ad\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the first note\",\n            \"Description\": \"fdginropigfgiorehguoehsgveifdpohgerpifovhpneuprgso;vhireosupgherovgheoivgboeirybvnjiopnjropupnvioupfd\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"66979125a8bc1ak0fe39d28ad\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the first note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n            \"__v\": 0\n        },\n\n        {\n            \"_id\": \"6697k9125a8bc1a0fe39d28ad\",\n            \"User\": \"66978f420b72a8560dcc15c3\",\n            \"Title\": \"this is the first note\",\n            \"Description\": \"fdginropignjiopnjropupnvioupfd\",\n            \"__v\": 0\n        }\n     ]\n\n    const [notes,SetNote]=useState(allnotes)\n\n    // add a note \n    const addnote= async(newnote)=>{\n        const Title=newnote.Title;\n        const Description=newnote.Description;\n\n//API CALL\nconst resposne = await fetch(`${host}/notes/addnote`,{\n    method: \"POST\",\n    headers:{\n        'Content-Type':'application/json',\n        'auth-token':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n    },\n    body: JSON.stringify({Title,Description})\n\n});\nconst json= resposne.json()\n\n\n\n        // const note ={\n        //     \"_id\": \"66979125a8bc1a0fe{}d28ad\"+(Math.floor(Math.random() * 100)),\n        //     \"User\": \"66978f420b72a8560dcc15c3\",\n        //     \"Title\": `${newnote.Title}`,\n        //     \"Description\": `${newnote.Description}`,\n        //     \"__v\": 0\n\n        // }\n        // SetNote([...notes,note]);\n    }\n\n    //delete a note\nconst deletenote=(id)=>{\n//console.log(\"deleting the node with id \"+id);\nconst note = notes.filter((notes)=>{return notes._id!==id})\nSetNote(note);\n}\n\n// edit a note\nconst editnote=async( id,Title,Description)=>{\n\n    //API CALL\n   \n    const resposne = await fetch(`${host}/notes/updatenotes/${id}`,{\n        method: \"POST\",\n        headers:{\n            'Content-Type':'application/json',\n            'auth-token':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY5NzhmNDIwYjcyYTg1NjBkY2MxNWMzIn0sImlhdCI6MTcyMTIwODg1M30.2cgO0fUXZqIhA9ikGDS1MF2fvc8M46p0imzpj-12FPM'\n        },\n        body: JSON.stringify({Title,Description})\n    \n    });\n    const json= resposne.json()\n\n    for(let index=0;index<notes.length;index++){\n        const element= notes[index];\n        if(element._id===id){\n            element.Title=Title;\n            element.Description=Description;\n        }\n\n    }\n}\n\n  return (\n    <noteContext.Provider value={{notes,addnote,deletenote,editnote}}>\n    {props.children}\n</noteContext.Provider>\n  )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}