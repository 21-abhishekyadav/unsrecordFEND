{"ast":null,"code":"import React from'react';import Displaypost from'./Displayposts';import{useContext,useEffect,useState}from'react';import postContext from'../context/postContext';import Masonry from\"masonry-layout\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Posts(){const{posts,getpost}=useContext(postContext);const[page,setPage]=useState(1);const[loading,setLoading]=useState(false);const[initialLoad,setInitialLoad]=useState(true);// Initial load\nuseEffect(()=>{const fetchInitialPosts=async()=>{setLoading(true);await getpost(1,true);// Reset posts for initial load\nsetLoading(false);setInitialLoad(false);};fetchInitialPosts();},[]);// Masonry layout\nuseEffect(()=>{if(posts.length>0){new Masonry(\".masonry-grid\",{itemSelector:\".masonry-item\",columnWidth:\".masonry-item\",percentPosition:true,gutter:0});}},[posts]);// Load more function\nconst loadMore=async()=>{setLoading(true);try{await getpost(page+1,false);// Don't reset posts for subsequent loads\nsetPage(prevPage=>prevPage+1);}catch(error){console.error(\"Error loading more posts:\",error);}finally{setLoading(false);}};// ... (rest of your code remains the same)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"row masonry-grid\",style:{marginLeft:\"-10px\",width:\"80vw\"},children:initialLoad&&loading?/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center py-5 my-5 w-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",style:{width:'3rem',height:'3rem'},role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"h5\",{className:\"mt-3 text-muted\",children:\"Loading posts...\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[posts.map(post=>/*#__PURE__*/_jsx(Displaypost,{post:post},post._id)),posts.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:loadMore,disabled:loading,className:\"btn btn-primary btn-lg px-4\",children:loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",\"aria-hidden\":\"true\"}),\"Loading...\"]}):'Load More Posts'})})]})});}","map":{"version":3,"names":["React","Displaypost","useContext","useEffect","useState","postContext","Masonry","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Posts","posts","getpost","page","setPage","loading","setLoading","initialLoad","setInitialLoad","fetchInitialPosts","length","itemSelector","columnWidth","percentPosition","gutter","loadMore","prevPage","error","console","className","style","marginLeft","width","children","height","role","map","post","_id","onClick","disabled"],"sources":["/Users/abhishekyadav/Desktop/WEBDEV/MERN/the project/FRONTEND/src/components/Post.js"],"sourcesContent":["import React from 'react'\nimport Displaypost from './Displayposts';\nimport { useContext, useEffect, useState } from 'react'\nimport postContext from '../context/postContext'\nimport Masonry from \"masonry-layout\";\n\nexport default function Posts() {\n  const { posts, getpost } = useContext(postContext);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [initialLoad, setInitialLoad] = useState(true);\n\n  // Initial load\n  useEffect(() => {   \n    const fetchInitialPosts = async () => {\n      setLoading(true);\n      await getpost(1, true);  // Reset posts for initial load\n      setLoading(false);\n      setInitialLoad(false);\n    };\n    fetchInitialPosts();\n  }, []);\n\n  // Masonry layout\n  useEffect(() => {\n    if (posts.length > 0) {\n      new Masonry(\".masonry-grid\", {\n        itemSelector: \".masonry-item\",\n        columnWidth: \".masonry-item\",\n        percentPosition: true,\n        gutter: 0,\n      });\n    }\n  }, [posts]);\n\n  // Load more function\n  const loadMore = async () => {\n    setLoading(true);\n    try {\n      await getpost(page + 1, false);  // Don't reset posts for subsequent loads\n      setPage(prevPage => prevPage + 1);\n    } catch (error) {\n      console.error(\"Error loading more posts:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ... (rest of your code remains the same)\n\n  return (\n    <div className='row masonry-grid' style={{ marginLeft: \"-10px\", width: \"80vw\" }}>\n      {initialLoad && loading ? (\n        <div className=\"d-flex justify-content-center align-items-center py-5 my-5 w-100\">\n          <div className=\"text-center\">\n            <div className=\"spinner-border text-primary\" style={{ width: '3rem', height: '3rem' }} role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n            <h5 className=\"mt-3 text-muted\">Loading posts...</h5>\n          </div>\n        </div>\n      ) : (\n        <>\n          {posts.map((post) => <Displaypost key={post._id} post={post} />)}\n          \n          {posts.length > 0 && (\n            <div className=\"text-center mt-4\">\n              <button \n                onClick={loadMore} \n                disabled={loading} \n                className=\"btn btn-primary btn-lg px-4\"\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                    Loading...\n                  </>\n                ) : (\n                  'Load More Posts'\n                )}\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}